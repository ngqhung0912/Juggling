function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.speed_x = 0 
	self.speed_y = 150 
	self.accel_x = 0 
	self.accel_y = 350
	self.drop = false 
	self.sounded = false
	self.alpha = 1


	self.kick_quality = 0 
	self.kick_timer = 0 	

	self.score = 0

	self.duration = 0
	self.last_duration = 0
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

	-- if self.is_start_timer then 
	-- 	self.duration = self.duration + dt
	-- end

	-- Ball update
	pos = go.get_position()
	
	pos.x = pos.x - self.speed_x*dt*0.5
	pos.y = pos.y - self.speed_y*dt*0.5
	self.speed_x = self.speed_x + self.accel_x*dt
	self.speed_y = self.speed_y + self.accel_y*dt

	if pos.y <= 110 and self.speed_y > 0 then 
		self.drop = true 
		self.speed_y = -(self.speed_y*0.4) 
		pos.y = 110

		if math.abs(self.speed_y) < 25 then 
			self.speed_y = 0 
			self.accel_y = 0 
		end 
	end 	
	

	if not self.drop and self.is_start_timer then  
		self.kick_timer =  self.kick_timer + dt 
		self.kick_quality  = (0.18 - self.kick_timer) / 0.18
		if self.kick_quality < 0 then 
			self.kick_quality = -self.kick_quality 
		end 
	else 
		self.kick_timer = 0 
		self.kick_quality = 0
	end 

	if self.speed_y > 0 and not self.drop then  
		if pos.y >= 128 and pos.y <= 132 then 
			if self.kick_quality > 0 then 
				self.speed_y = - 200 * self.kick_quality - 100 
				self.accel_y = 350 
				self.score = self.score + 1 
			end 
		end 
	end 

	
	go.set_position(pos)

	
	
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	local pos = {
		x = action.x,
		y = action.y
	}
	if action_id == hash("left")  then 
		if action.pressed then 
		end 		
	end 
end

function on_input(self, action_id, action)
	if action_id == hash("left") then 
		if action.pressed then 
			self.is_start_timer = true 
			sprite.play_flipbook("player1#sprite", "Player1_balling")
		elseif action.released then 
			self.is_start_timer = false 
			-- self.kick_timer = self.duration
			-- self.duration = 0
		end
	else 
		self.kick_timer = 0
	end
end
function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
