local function load_highscore()
	local filename = sys.get_save_file("sys_save_load", "highscore") -- <1>
	local data = sys.load(filename) -- <2>
	return data.highscore or 0  -- <3>
end

local function save_highscore(highscore)
	local filename = sys.get_save_file("sys_save_load", "highscore")
	sys.save(filename, { highscore = highscore })  -- <4>
end


function init(self)
	self.score = 0
	self.highscore = load_highscore()
	 
	

	msg.post(".", "start_game")
	
	self.state = "main_menu"			
	self.ball_1 = false 
	self.ball_2 = false 
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)


	-- if self.state == "playing" then 
	-- 	
	-- 	if self.score < 2 then 
	-- 		msg.post("game:/ball2", "disable")
	-- 	elseif self.score == 2 then
	-- 		msg.post("game:/ball2","enable")
	-- 	end 
	-- 	
	-- end 
	-- 		
			

end 

function on_message(self, message_id, message, sender)
	if message_id == hash("update_score") then 
		self.score = self.score + 1 
		msg.post("game:/score_gui", "update_gui_score", {score = self.score})
	end

		

	
	if message_id == hash("start_game") then 
		if self.state ~= "main_menu" then
			-- Upon receipt of a 'to_main_menu' message -- ensure that the 
			-- Level1 and Level2 collections are unloaded		
			if self.state == "game" then
				msg.post("#game_proxy", "unload")
			end
			if self.state == "score_menu" then
				msg.post("#score_menu_proxy", "unload")
			end
		end
		
		msg.post("#main_menu", "load")
		self.state = "main_menu"
		
	elseif message_id == hash("start_playing") then  
		msg.post("#game_proxy", "load")
		msg.post("#main_menu", "disable")

	elseif message_id == hash("score") then 
		msg.post("#score_menu_proxy", "load")
		msg.post("#main_menu", "disable")


	elseif message_id == hash("proxy_loaded") then  
		if sender == msg.url("#game_proxy") then 
			msg.post(sender, "enable") 
			self.state = "playing" 
		end 

		if sender == msg.url("#score_menu_proxy") then 
			msg.post(sender, "enable") 
			self.state = "score" 
		end 

	elseif message_id == hash("end_game") then
		msg.post("#game_proxy", "unload")
		msg.post("#score_menu_proxy", "load")
		if self.highscore < self.score then 
			self.highscore = self.score  
			save_highscore(self.highscore)
		else
			print("low score")
		end 
		
	end 

	
	
end 

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
